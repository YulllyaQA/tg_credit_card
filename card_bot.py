# –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫
# –í google colab –¥–æ–±–∞–≤–∏—Ç—å: !pip install pyTelegramBotAPI
# –í google colab –¥–æ–±–∞–≤–∏—Ç—å: !pip install Faker
# –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤ —Ñ–∞–π–ª requirements.text –¥–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–æ–∫–∏
# 'PyTelegramBotApi'
# 'faker'

from telebot import TeleBot, types
from faker import Faker


bot = TeleBot(token='–í–í–ï–î–ò–¢–ï –°–í–û–ô –¢–û–ö–ï–ù', parse_mode='html')

faker = Faker() 

# –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—É—Ç—Ä—ã
card_type_keybaord = types.ReplyKeyboardMarkup(resize_keyboard=True)

card_type_keybaord.row(
    types.KeyboardButton(text='VISA'),
    types.KeyboardButton(text='Mastercard'),
)

card_type_keybaord.row(
    types.KeyboardButton(text='Maestro'),
    types.KeyboardButton(text='JCB'),
)


@bot.message_handler(commands=['start'])
def start_command_handler(message: types.Message):
    # 
    photo = open('quokka.jpg', 'rb')
    bot.send_photo(message.chat.id, photo)
    bot.send_message(
        chat_id=message.chat.id, 
        text=f'–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}! –Ø –∫–≤–æ–∫–∫–∞ QA –∏ —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–º–µ—Ä —Ç–µ—Å—Ç–æ–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã ü§ó \n–í—ã–±–µ—Ä–∏ —Ç–∏–ø –∫–∞—Ä—Ç—ã:', 
        reply_markup=card_type_keybaord,
    )

 
@bot.message_handler(commands=['help'])
def help_command_handler(message):
    photo = open('1.png', 'rb')
    bot.send_photo(message.chat.id, photo)
    text = '–ü—Ä–∏–≤–µ—Ç! –Ø –º–æ–≥—É —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–º–µ—Ä —Ç–µ—Å—Ç–æ–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã üòâ. –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ /start'
    bot.send_message(message.chat.id, text, parse_mode='html')
       


@bot.message_handler()
def message_handler(message: types.Message):
    '
    if message.text == 'VISA':
        card_type = 'visa'
    elif message.text == 'Mastercard':
        card_type = 'mastercard'
    elif message.text == 'Maestro':
        card_type = 'maestro'
    elif message.text == 'JCB':
        card_type = 'jcb'
    elif message.text == "–ü—Ä–∏–≤–µ—Ç":
       bot.send_message(message.chat.id, '–ò —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç! –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–µ–Ω –Ω–æ–º–µ—Ä —Ç–µ—Å—Ç–æ–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã, –Ω–∞–∂–º–∏ /start', parse_mode='html')
    elif message.text == "–ü—Ä–∏–≤–µ—Ç!":
       bot.send_message(message.chat.id, '–ò —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç! –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–µ–Ω –Ω–æ–º–µ—Ä —Ç–µ—Å—Ç–æ–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã, –Ω–∞–∂–º–∏ /start', parse_mode='html')
    elif message.text == "–ø—Ä–∏–≤–µ—Ç":
       bot.send_message(message.chat.id, '–ò —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç! –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–µ–Ω –Ω–æ–º–µ—Ä —Ç–µ—Å—Ç–æ–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã, –Ω–∞–∂–º–∏ /start', parse_mode='html')               
    else:
        
        
        bot.send_message(
            chat_id=message.chat.id,
            text='–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üò± –ù–∞–∂–º–∏ /start',
        )
        return

  
    card_number = faker.credit_card_number(card_type)
  
    bot.send_message(
        chat_id=message.chat.id,
        text=f'–¢–µ—Å—Ç–æ–≤–∞—è –∫–∞—Ä—Ç–∞ {card_type}:\n<code>{card_number}</code>'
    )


def main():
    
    bot.infinity_polling()


if __name__ == '__main__':
    main()
